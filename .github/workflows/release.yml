name: Create Release

on:
  workflow_dispatch:
  # pull_request:
  #   branches: [ main ]
  # release:
  #   types: [published, prereleased]

env:
  RELEASE_TAG: "0.1.0"
jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            build_name: spaces_tool_macos
            build_cmd: pipenv run pyinstaller --name "spaces_tool_macos" --onefile main.spec
            chrome_url: "https://path_to_chrome_portable_for_macos.zip"
            chromedriver_url: "https://path_to_chromedriver_for_macos.zip"
            release_file: dist/spaces_tool_macos
          - os: ubuntu-latest
            build_name: spaces_tool_linux
            install_extra: sudo apt-get install python3-tk
            build_cmd: pipenv run pyinstaller --hidden-import=tkinter --name="spaces_tool_linux" --onefile linux_app.spec
            chrome_url: "https://path_to_chrome_portable_for_linux.tar.gz"
            chromedriver_url: "https://path_to_chromedriver_for_linux.zip"
            release_file: dist/spaces_tool_linux
          - os: windows-latest
            build_name: spaces_tool_windows
            build_cmd: pipenv run pyinstaller --icon=icon.ico --windowed --name="spaces_tool_windows" --onefile main.spec
            chrome_url: "https://path_to_chrome_portable_for_windows.zip"
            chromedriver_url: "https://path_to_chromedriver_for_windows.zip"
            release_file: dist/spaces_tool_windows.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pipenv wheel
        if: matrix.os == 'ubuntu-latest'

      - name: Install additional dependencies (if any)
        run: ${{ matrix.install_extra || 'echo "No extra dependencies"' }}

      - id: cache-pipenv
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install pipenv dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Download Chrome Portable
        run: |
          curl -L ${{ matrix.chrome_url }} -o chrome_portable.zip
          unzip chrome_portable.zip -d chrome_portable

      - name: Download ChromeDriver
        run: |
          curl -L ${{ matrix.chromedriver_url }} -o chromedriver.zip
          unzip chromedriver.zip -d chromedriver

      - name: Build executable
        run: ${{ matrix.build_cmd }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          token: ${{ secrets.RELEASE_TOKEN }}
          files: ${{ matrix.release_file }}
