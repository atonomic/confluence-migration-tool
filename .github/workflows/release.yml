name: Create Release

on:
  workflow_dispatch:

env:
  RELEASE_TAG: "0.1.0"
  APP_NAME: "spaces_tool"  # Define the app name once

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          # - os: macos-latest
          #   architecture: "x64"
          #   build_name: "${{ env.APP_NAME }}_macos_x64"
          #   build_cmd: pipenv run pyinstaller --name "${{ env.APP_NAME }}_macos_x64" --add-data "chrome_portable/*:chrome_portable" --add-data "chromedriver/*:chromedriver" --onefile main.spec
          #   chrome_url: "https://storage.googleapis.com/chrome-for-testing-public/131.0.6724.0/mac-x64/chrome-mac-x64.zip"
          #   chromedriver_url: "https://storage.googleapis.com/chrome-for-testing-public/131.0.6724.0/mac-x64/chromedriver-mac-x64.zip"
          #   release_file: dist/${{ env.APP_NAME }}_macos_x64
          - os: macos-latest
            architecture: "arm64"
            build_name: "${{ env.APP_NAME }}_macos_arm64"
            build_cmd: pipenv run pyinstaller --name "${{ env.APP_NAME }}_macos_arm64" --add-data "chrome_portable/*:chrome_portable" --add-data "chromedriver/*:chromedriver" --onefile main.spec
            chrome_url: "https://storage.googleapis.com/chrome-for-testing-public/131.0.6724.0/mac-arm64/chrome-mac-arm64.zip"
            chromedriver_url: "https://storage.googleapis.com/chrome-for-testing-public/131.0.6724.0/mac-arm64/chromedriver-mac-arm64.zip"
            release_file: dist/${{ env.APP_NAME }}_macos_arm64
          - os: ubuntu-latest
            build_name: "${{ env.APP_NAME }}_linux"
            install_extra: sudo apt-get install python3-tk
            build_cmd: pipenv run pyinstaller --hidden-import=tkinter --name="${{ env.APP_NAME }}_linux" --add-data "chrome_portable/*:chrome_portable" --add-data "chromedriver/*:chromedriver" --onefile linux_app.spec
            chrome_url: "https://storage.googleapis.com/chrome-for-testing-public/131.0.6724.0/linux64/chrome-linux64.zip"
            chromedriver_url: "https://storage.googleapis.com/chrome-for-testing-public/131.0.6724.0/linux64/chromedriver-linux64.zip"
            release_file: dist/${{ env.APP_NAME }}_linux
          - os: windows-latest
            architecture: "x64"
            build_name: "${{ env.APP_NAME }}_windows_64"
            build_cmd: pipenv run pyinstaller --icon=icon.ico --windowed --name="${{ env.APP_NAME }}_windows_64" --add-data "chrome_portable/*;chrome_portable" --add-data "chromedriver/*;chromedriver" --onefile main.spec
            chrome_url: "https://storage.googleapis.com/chrome-for-testing-public/131.0.6724.0/win64/chrome-win64.zip"
            chromedriver_url: "https://storage.googleapis.com/chrome-for-testing-public/131.0.6724.0/win64/chromedriver-win64.zip"
            release_file: dist/${{ env.APP_NAME }}_windows_64.exe
          # - os: windows-latest
          #   architecture: "x86"
          #   build_name: "${{ env.APP_NAME }}_windows_32"
          #   build_cmd: pipenv run pyinstaller --icon=icon.ico --windowed --name="${{ env.APP_NAME }}_windows_32" --add-data "chrome_portable/*;chrome_portable" --add-data "chromedriver/*;chromedriver" --onefile main.spec
          #   chrome_url: "https://storage.googleapis.com/chrome-for-testing-public/131.0.6724.0/win32/chrome-win32.zip"
          #   chromedriver_url: "https://storage.googleapis.com/chrome-for-testing-public/131.0.6724.0/win32/chromedriver-win32.zip"
          #   release_file: dist/${{ env.APP_NAME }}_windows_32.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pipenv wheel
        if: matrix.os == 'ubuntu-latest'

      - name: Install additional dependencies (if any)
        run: ${{ matrix.install_extra || 'echo "No extra dependencies"' }}

      - id: cache-pipenv
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install pipenv dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Download Chrome Portable
        run: |
          curl -L ${{ matrix.chrome_url }} -o chrome_portable.zip
          unzip chrome_portable.zip -d chrome_portable

      - name: Download ChromeDriver
        run: |
          curl -L ${{ matrix.chromedriver_url }} -o chromedriver.zip
          unzip chromedriver.zip -d chromedriver

      - name: Build executable
        run: ${{ matrix.build_cmd }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          token: ${{ secrets.RELEASE_TOKEN }}
          files: ${{ matrix.release_file }}
